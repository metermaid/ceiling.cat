<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

	<title><![CDATA[Rita Cheng's Blog]]></title>
	<link href="http://blog.ritacheng.com/atom.xml" rel="self"/>
	<link href="http://blog.ritacheng.com/"/>
	<updated>2014-08-15T13:19:24-07:00</updated>
	<id>http://blog.ritacheng.com/</id>
	<author>
		<name><![CDATA[Rita Cheng]]></name>
		
	</author>
	<generator uri="http://octopress.org/">Octopress</generator>

	
	<entry>
		
			<title type="html"><![CDATA[I Was a Teenage Web Developer]]></title>
		
		<link href="http://blog.ritacheng.com/blog/2014/08/15/i-was-a-teenage-web-developer/"/>
		<updated>2014-08-15T13:02:40-07:00</updated>
		<id>http://blog.ritacheng.com/blog/2014/08/15/i-was-a-teenage-web-developer</id>
		<content type="html">
			<![CDATA[
				
					<p></p>
				
			]]>
			<![CDATA[<p>(*This post was originally posted to <a href="https://medium.com/@repleats/i-was-a-teenage-web-designer-9b3f65d30d58">Medium</a>.)</p>

<p>When I was in high school, the other web designers I knew were other teenage girls. When I was 14, I attended a seminar to encourage young women to consider computer science. When I went to university, about a third of my first year CS classes were female.</p>

<p>Any of these women could have become computer scientists. Some of them did. Many of them didn’t. So why did I?</p>

<h3>Tumblr before Tumblr</h3>

<p>I was in the fifth grade when I made my first web page. It’s a typical nerd origin story: I wanted a truly unique pet page for my Neopet, and to do that, I needed to go beyond the provided templates and edit the HTML directly. I borrowed HTML books from the library, and created a webpage with a blinking black background, haphazardly placed tables, and glowing blue headers to match my electric kau.</p>

<p><img class="left" src="http://blog.ritacheng.com/images/mookie.gif" title="'RIP, Mookie3001.'" ></p>

<p>It was beautiful. It was an eyesore. I was hooked.</p>

<p>I went on to create many more web pages. In the fifth grade alone, I also created a Neopets fan site, a personal website, and a website for my “writing”<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup>. I even volunteered to do my older brother’s Information Technology project, a Simpsons page complete with a “Who Needs the Kwik-E-Mart?” MIDI playing in the background.</p>

<p><img class="left" src="http://blog.ritacheng.com/images/webpages.jpeg" title="'I was 13 for the first of these images. These aren’t even half of the websites I made. I was a weirdly productive little teenager.'" ></p>

<p>By high school, I was creating so many websites I can scarcely remember them all now. I begged my mother to use her credit card so I can buy my own domain name. I honed my skills in HTML, CSS, and PHP. Most importantly, I discovered communities of like-minded teenage web designers— a few in person, but mostly online.</p>

<p>I can find hardly any trace of these communities left on the modern internet. Trips to the Internet Archive are my primary reassurance that they weren’t a figment of my imagination. The modern equivalent of these communities would be Tumblr: they both connect like-minded, introverted teenagers with blogs, tutorial websites, and maybe a website for screen captures of favourite TV Shows. As part of those communities, we learned HTML, CSS, graphic design skills, and maybe some PHP.<sup id="fnref:2"><a href="#fn:2" rel="footnote">2</a></sup> We linked each other in blog rolls and talked to each other on phpBB/XMB forums. I was a member of the pixel-art-filled Dodo’s Message Board.<sup id="fnref:3"><a href="#fn:3" rel="footnote">3</a></sup> Being a part of DMB helped me learn some new skills, get aid when I needed it, and made me feel a little less alone in the world.</p>

<p>Because I was making these websites, I decided to take the Information Technology class in high school and even asked to be bumped to the next grade’s offering of it. I was isolated as the only girl in a room full of older boys. I coded rudimentary C++, made my web pages, and retreated into my blogs and message boards.</p>

<h3>The Imperial Oil Seminar in Computer Science for Young Women</h3>

<p>In the ninth grade, my InfoTech teacher suggested that I apply to attend the University of Waterloo’s Seminar in CS for Young Women. I filled in my application, and a few months later, I took a week off school to fly to exotic Waterloo, Ontario. It would be the first and only time I’d be in a computer lab with only other women.<sup id="fnref:4"><a href="#fn:4" rel="footnote">4</a></sup></p>

<p>I learned a few things from this seminar. How to take apart a computer. How to program a rudimentary GUI in Tcl/Tk. What career paths you can choose with a CS degree. At this point, websites were my weird hobby, but in the future I saw in that seminar, it could be a career.</p>

<p>As it turns out, I was one of the few girls referred by their InfoTech teachers— generally, they were referred by their math teachers or their guidance counsellors. It would be the first time the other girls had ever programmed, and some of these young women would go on to earn Computer Science degrees.</p>

<p>I didn’t realize the impact it had on me at the time, but in retrospect, made a huge impression. Three years later, I started a degree in Computer Science at the University of Waterloo.</p>

<h3>My Waterloo</h3>

<p>University was a series of firsts for me: the first time I ever lived away from home. The first time I truly loved programming, and not just web design. The first time I ever thought about quitting computer science.</p>

<p>My first year at Waterloo was lonely. Unlike most freshmen, I both lived off-campus and away from home. The university mishandled my application and, by the time they sorted it out, there wasn’t room in the dormitories for me. Nobody I knew went to Waterloo— if they headed east, it was either to Toronto or Montreal. Furthermore, in my second semester, Dodo’s Message Board shut down. I had never been so isolated in my life.</p>

<p>The problems you face while being in a visibly marginalized group aren’t necessarily different from those of the majority,<sup id="fnref:5"><a href="#fn:5" rel="footnote">5</a></sup> but being marginalized can often make those same problems worse. Feeling lonely is bad for any college student. Being a minority compounds that loneliness. Getting poor grades is terrible. But when you’re the only girl and you’re getting terrible grades? You feel like that’s a sign to cut your losses and leave. Or maybe you feel extra pressure to stay: you’re the sole representative for your gender.</p>

<p>Later on, my Operating Systems professor kicked out every student who failed the first assignment. The idea was to save students from paying the course fees: if you couldn’t understand pointers, you would probably fail the course. It would be best to wait until you did understand pointers. A friend of mine failed this assignment. The removal was intended to be a mercy, but it felt like a rejection: “You’re not smart enough for this. Get out.”</p>

<p>Instead of leaving Computer Science, I left Waterloo and headed back to the West Coast. I went to the University of Victoria where my best friend was going to school. I wasn’t quite so alone anymore. I’ve stayed in the West Coast since, and earned my degree in Computer Science with honours.</p>

<h3>Lessons</h3>

<p>I’m eliding a lot of details in this origin story. I’ve retconned<sup id="fnref:6"><a href="#fn:6" rel="footnote">6</a></sup> away employment, alienation and abuses— I’m choosing which stories define me. Here’s what helped along the way:</p>

<ol>
<li>Availability. I’m grateful for having a computer and information technology classes. Furthermore, I’m grateful that my household had enough money that I didn’t need to work as a teenager and that I didn’t have to take care of any siblings. Around 20% of households do not have a computer at home, and some schools do not have information technology classes. There are many households where would-be computer scientists wouldn’t have time for the programming lessons advocated by Code.org. You can’t begin an outreach program with the baseline assumption that people can just make time to take part in them. We need to provide hardware and economic assistance to those who need it.<sup id="fnref:7"><a href="#fn:7" rel="footnote">7</a></sup></li>
<li>Motivation. I’m looking at the quotes page of Code.org, and most of the reasons to start programming suggested by these leaders and celebrities are either about economic or personal development. These may not be motivating for everybody, so we can expand this list by encouraging coding as a creative outlet, mental stimulation, or just a fun activity. It’s especially useful to have intrinsic motivations when you’re marginalized. It helps keep you going when you’re burnt out and you think that you’re not good enough. When it comes down to it, I like making websites and have fun doing it.</li>
<li>Outreach Programs. I was already making websites by the time I attended the CS Seminar, but it helped me envision a future with Computer Science. Outreach programs are often the first time someone tries programming. They can dispel programming myths and misconceptions: I’ve known a lot of people who were discouraged from computing because they didn’t enjoy math.<sup id="fnref:8"><a href="#fn:8" rel="footnote">8</a></sup> Programming is a different skill though, and finding calculus dull doesn’t mean a CS degree is not for you. Outreach programs can clear that up.</li>
<li>A Support Network. Being supported by my family and having a network of other teenagers with websites were both critical to me entering this field. They were also important for discouraging me from leaving. Even introverted nerds hate feeling lonely. It helps to have someone willing to help you when you need it, and to listen carefully even when you don’t want explicit help. Sometimes, it’s nice just to talk about your problems without being questioned about them.</li>
</ol>


<p>I’m extremely grateful for all the advantages I’ve had in life. I began as a teenage designer, and end here as a full-stack web developer. Truth be told, I hadn’t looked at this history in years. I suffer Impostor Syndrome and forget my past. It should be clear to me: I belong here, and women who weren’t teenage web designers belong here too. You don’t need to have a typical nerd origin story to be a programmer.</p>
<div class="footnotes">
<hr/>
<ol>
<li id="fn:1">
<p>Bad poetry? Oh no-etry!<a href="#fnref:1" rev="footnote">&#8617;</a></p></li>
<li id="fn:2">
<p>Even if it was just enough to wrangle your installation of B2.<a href="#fnref:2" rev="footnote">&#8617;</a></p></li>
<li id="fn:3">
<p>I was too intimidated to join VortexMB or fu.CK.<a href="#fnref:3" rev="footnote">&#8617;</a></p></li>
<li id="fn:4">
<p>Being in a lab by myself or with a singular female friend doesn’t count. On the other hand, I can’t count the times when the rest of the lab is only men. I notice every time.<a href="#fnref:4" rev="footnote">&#8617;</a></p></li>
<li id="fn:5">
<p>Sometimes they are though. There are abuses only marginalized people face. But that’s not what my life was like at this point.<a href="#fnref:5" rev="footnote">&#8617;</a></p></li>
<li id="fn:6">
<p>Retroactive continuity, like in the comics, when you alter previously established history.<a href="#fnref:6" rev="footnote">&#8617;</a></p></li>
<li id="fn:7">
<p>There are services like Free Geek for hardware, but having to pay or volunteer is still a barrier.<a href="#fnref:7" rev="footnote">&#8617;</a></p></li>
<li id="fn:8">
<p>For the record, half my AP Calculus class were women in high school.<a href="#fnref:8" rev="footnote">&#8617;</a></p></li>
</ol>
</div>

]]>
		</content>
	</entry>
	
	<entry>
		
			<title type="html"><![CDATA[The Ultimate Guide to General Delimited Input]]></title>
		
		<link href="http://blog.ritacheng.com/blog/2014/08/05/the-ultimate-guide-to-general-delimited-input/"/>
		<updated>2014-08-05T13:05:25-07:00</updated>
		<id>http://blog.ritacheng.com/blog/2014/08/05/the-ultimate-guide-to-general-delimited-input</id>
		<content type="html">
			<![CDATA[
				
					<p></p>
				
			]]>
			<![CDATA[<p>Although my heart belongs to ruby, lately, I haven&rsquo;t been using it at all&mdash; I&rsquo;ve been working on coding tumblr the game in entirely client side JavaScript. To keep my ruby skills fresh though, I&rsquo;ve been doing a reading about Ruby on the side. One topic, which I hardly gave any thought to before, has captured my attention: Ruby&rsquo;s general delimited input, otherwise known as &ldquo;percent literals&rdquo; or &ldquo;percent notation&rdquo;.</p>

<p>The provenance of these macros is unknown to me. Originally, I ran across to these as &ldquo;shorthand&rdquo; which seemed like an odd moniker to me&mdash; they&rsquo;re not at all shorter than the regular syntax. Suggestions online include that these are another of Ruby&rsquo;s inscrutable Perlisms, like those weird Perl-style global variables, but the only references to them are in the context of Ruby! I can only conclude that they&rsquo;ve nothing to do with Perl, and that&rsquo;s a myth perpetuated by Rubyists.</p>

<p>General delimited input notation is defined directly in MRI&rsquo;s parse.y, and it&rsquo;s present as far back as version 1.0 from 1996, so it&rsquo;s likely just sprung from the head of Matz and not a feature cribbed from another language as some people suggest. Whatever its origins, GDI has its uses.</p>

<p>All forms of GDI come in the same basic syntax: <code>%(some modifier) (some delimiter) (your content) (that delimiter)</code> There are six modifiers for GDI, and some of those have both interpolated and non-interpolated versions. For delimiters, you can use any non-alphanumeric symbol (in the past, you could use alphanumeric ones too, but that&rsquo;s a terrible practice.) Most commonly, you&rsquo;ll see people use <code>%Q{curly brackets}</code>, <code>%Q(parentheses)</code>, <code>%Q&lt;these pointy things&gt;</code>, and <code>%Q[square brackets]</code>, but you can use tildes and even quotation marks, for extra confusion. I&rsquo;d advise against it, though.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>%W"wait can you even do this?"
</span><span class='line'>=&gt; ["wait", "can", "you", "even", "do", "this?"]</span></code></pre></td></tr></table></div></figure>


<p>Ruby style guides usually advocate the use of parentheses, except in the case of regular expressions, where they advocate curly brackets (since parentheses are very common in RE.)</p>

<p>Contrary to popular belief, one can use your same delimiters unescaped within the GDI, so long as you balance them. So this is fine: <code>%Q{I like braces like these:{} }</code></p>

<p>But this is not <code>%Q{I only prefer a single brace:{ }</code></p>

<p>At that point, you should escape that poor brace.</p>

<h3>%q / %Q</h3>

<p>%q is a macro for a single quote non-intepreted string, and %Q is a macro for a double quote interpreted string. Consequentially, in the former you don&rsquo;t need to really escape any characters&mdash; it&rsquo;s good for strings with both quotation marks. In the latter, you can use string interpolation, so it&rsquo;s good for strings with both interpolation and double quotes.
If you don&rsquo;t use a modifier, for example, <code>%(hello)</code>, it&rsquo;s a shorthand for %Q.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>%Q( Daria said, "Can you do this math?: #{1+2}" )
</span><span class='line'>=&gt; " Daria said, \"Can you do this math?: 3\" "
</span><span class='line'>
</span><span class='line'>%q( Quinn said, "I cannot do this math: #{1+2}" )
</span><span class='line'>=&gt; " Quinn said, \"I cannot do this math: \#{1+2}\" "
</span><span class='line'>
</span><span class='line'>%( Jane said, "I can do this math: #{1+2}" )
</span><span class='line'>=&gt; " Jane said, \"I can do this math: 3\" "</span></code></pre></td></tr></table></div></figure>


<h3>%x</h3>

<p>%x uses the ` method and runs its contents as a command in a subshell. Use ` unless your command contains that symbol.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>%x(ruby --copyright)
</span><span class='line'>=&gt; "ruby - Copyright (C) 1993-2014 Yukihiro Matsumoto\n"</span></code></pre></td></tr></table></div></figure>


<h3>%r</h3>

<p>%r creates an interpolated regex, but the usual syntax of <code>/regex/</code> does as well. Use it if your regex has more than one /.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>%r(^Adventure\s?Time$)
</span><span class='line'>=&gt; /^Adventure\s?Time$/</span></code></pre></td></tr></table></div></figure>


<h3>%w / %W</h3>

<p>Ruby 1.1 added %w and %W, which are likely the most common form of GDI you&rsquo;ll find in the wild. It&rsquo;s easiest to think of them as a &ldquo;word array&rdquo; or a &ldquo;whitespace-delimited array&rdquo;, if you&rsquo;re pedantic. It creates an array of strings as separated by the whitespace.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>%W( 1 2 3 4 5 #{1+5} )
</span><span class='line'>=&gt; ["1", "2", "3", "4", "5", "6"]
</span><span class='line'>   
</span><span class='line'>%w( 1 2 3 4 5 #{1+5} )
</span><span class='line'>=&gt; ["1", "2", "3", "4", "5", "\#{1+5}"]</span></code></pre></td></tr></table></div></figure>


<h3>%s</h3>

<p>Introduced in Ruby 1.8, lord knows why this exists&mdash; nobody really uses it. %s creates a single symbol, with whitespace in tact. One might be tempted to use it for symbols with whitespace in it, but the preferred method is by using quotes after <code>:</code>, like so: <code>:"this works"</code>.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>%s(this is useless)
</span><span class='line'>=&gt; :"this is useless"</span></code></pre></td></tr></table></div></figure>


<h3>%i / %I</h3>

<p>The latest modifier for GDI, introduced only in Ruby 2.0, this is the cousin to %w and %W, but instead of an array of strings, these create arrays of symbols. As usual, %i is non-interpolated and %I is interpolated.
Be warned, that the interpolated form creates an extra string on the heap for each symbol. How often do you really want an interpolated symbol, anyways?</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>fruit = "apple"
</span><span class='line'>%I(banana orange carrot #{fruit})
</span><span class='line'>=&gt; [:banana, :orange, :carrot, :apple]
</span><span class='line'>
</span><span class='line'>%i(banana orange carrot #{fruit})
</span><span class='line'>=&gt; [:banana, :orange, :carrot, :"\#{fruit}"]</span></code></pre></td></tr></table></div></figure>


<h3>Conclusions</h3>

<p>In general, GDI has its pros and cons: on the one hand, you can use GDI to avoid escaping literals&mdash; if you use a lot of quotation marks and other symbols, it can be significantly less confusion to read.</p>
]]>
		</content>
	</entry>
	
	<entry>
		
			<title type="html"><![CDATA[API Planning]]></title>
		
		<link href="http://blog.ritacheng.com/blog/2014/05/27/api-planning/"/>
		<updated>2014-05-27T02:07:09-07:00</updated>
		<id>http://blog.ritacheng.com/blog/2014/05/27/api-planning</id>
		<content type="html">
			<![CDATA[
				
					<p></p>
				
			]]>
			<![CDATA[<p>Over the last little while, I&rsquo;ve grown increasingly disillusioned with Agile developments<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup>. That&rsquo;s not to say I advocate using Waterfall or even any problems I have with the core tenets of the Agile manifesto; it just seems that any company that is purportedly Agile is either using it as a cover for an ad-hoc structureless process or is steeped in so many Agile tools and processes that it is hardly Agile at all anymore.<sup id="fnref:2"><a href="#fn:2" rel="footnote">2</a></sup> Moreover, there is hardly any process for useful planning activities like UX Research (if it is done at all.) It&rsquo;s no wonder so many APIs seem haphazardly planned and missing core features.</p>

<p>Nowadays, I tend to advocate psuedo-Agile development with a few formal planning activities. One of these activities I&rsquo;ve been exploring these last few days is API definition. In the past, my APIs have been created in a very ad-hoc way: methods would be created as I went, with no prior thought. By the time documentation is written, it becomes clear that many decisions are made for convenience (I admit that I am often guilty of conflating my RESTful routes; GET is such a convenience sometimes. I have been getting better about this, though.)</p>

<p>Over the last little while, though, API design tools have grown in increased prominence. <a href="http://www.apiary.io">Apiary</a> has raised millions in venture capital, and recently, I volunteered at <a href="http://www.polyglotconf.com">PolyglotConf</a> where a small session advocated the use of <a href="http://www.raml.org">RAML</a>. I spent the remainder of the weekend checking these tools (and Swagger as well) out, and it was an eye opening experience.</p>

<p>Even if you&rsquo;re trying to be as lean and Agile as possible, here are a few good reasons to try out an API design tool:</p>

<ol>
<li>Design. What sets RAML and API Blueprint (from Apiary) apart from prior API design tools are their top-down approaches to API design&mdash; it can be so much easier to analyze and design an API when you&rsquo;re thinking about the bigger picture of your application. It makes it easy to see re-occurring patterns and plan for code reuse, but it can also be extremely lightweight. Just hashing out a sketch of an API in RAML made me realize that I could eliminate a few methods and planned functionality, saving myself future work.</li>
<li>Collaboration. Having a common API design language helps to facilitate working with others on an API, particularly if you&rsquo;re in a distributed team. It&rsquo;s extremely useful for when your API changes: the text format makes it easy to track ownership of changes, and you can also programmatically update your clients about changes to your API.</li>
<li>Tooling. Although Swagger is a little more oriented towards being read by machines, any of these languages can be used to standardize automated tools. Can you imagine generating an AngularJS client based on a RAML document? What a dream.</li>
<li>Generating API documentation. This was how Apiary was originally sold to me, and why I wasn&rsquo;t interested in it at the beginning&mdash; I didn&rsquo;t see too much of a reason not to just roll your own, particularly if you have other documentation systems in place. It can be pretty handy, though. It can be generated for different audiences: besides developers, you might find it handy to communicate the API to business stakeholders and marketing as well.</li>
</ol>


<p>I&rsquo;m sure I&rsquo;m missing plenty of reasons to consider formal API design, but even these four reasons are enough for me to discourage on-the-fly API creation. Even an activity as simple as listing out your routes before development can have positive benefits for your application.</p>
<div class="footnotes">
<hr/>
<ol>
<li id="fn:1">
<p>Even Dave Thomas, one of the original Agile signatories, proclaimed that <a href="http://www.halfarsedagilemanifesto.org/">Agile was Dead</a>. I only partially agree, and I don&rsquo;t understand why wouldn&rsquo;t you have a conference on ballet dancing? Ballet is really hard; it&rsquo;s not just an art.<a href="#fnref:1" rev="footnote">&#8617;</a></p></li>
<li id="fn:2">
<p>At least this is the impression I&rsquo;m getting from off the record conversations from other developers.<a href="#fnref:2" rev="footnote">&#8617;</a></p></li>
</ol>
</div>

]]>
		</content>
	</entry>
	
	<entry>
		
			<title type="html"><![CDATA[Password Auditing]]></title>
		
		<link href="http://blog.ritacheng.com/blog/2014/04/20/password-auditing/"/>
		<updated>2014-04-20T00:35:06-07:00</updated>
		<id>http://blog.ritacheng.com/blog/2014/04/20/password-auditing</id>
		<content type="html">
			<![CDATA[
				
					<p></p>
				
			]]>
			<![CDATA[<p>With the recent disclosure of the Heartbleed exploit, account security is undergoing increased media scrutiny and many of my less technical friends have asked me questions about how to proceed. Although it is likely unnecessary to change every single account password, now is as good a time as any to do a security audit of yourself and your application accounts. Here is a small audit that is fairly easy to do (and indeed, I did so earlier today):</p>

<h3>Collect a List of your Online Accounts</h3>

<p>The first step is intuitive enough: to secure yourself, you need to know where your openings are. If you use a password manager such as <a href="https://lastpass.com/">LastPass</a>, <a href="http://www.roboform.com">Roboform</a>, or <a href="https://agilebits.com/onepassword">1Password</a>, this should be extremely straightforward and you can move on to the next step. They can also be built into your browser (Chrome has a fairly commonly used one.)</p>

<p>If you do not, I recommend using one to all but the most paranoid of users, as they simplify keeping track of your accounts and passwords, and can be synced between your devices. Otherwise, make a list manually by going through your commonly used websites and look at popular websites (popular websites are at once more likely to be secure and more likely to be targeted for an attack.) Also, search your inbox for account registration or password reset emails. (Search &ldquo;account&rdquo;, &ldquo; username&rdquo;, &ldquo;password&rdquo;.) Once you have a list, you can move on.</p>

<h3>Try to Delete Unused Accounts</h3>

<p>I sign up for many websites on a whim and never use them again. Are there any sites like this for you as well? Or do you never really use that Instagram anyways? No opening is better than a secure one, so you should probably just close these accounts down.</p>

<p>Look through your list and find any accounts you could really do without, and update your accounts with dummy information and new passwords. Even if your account is successfully deleted, it&rsquo;s hard to ensure that a website will truly honour your privacy or your request. After this, it&rsquo;s time to delete the account, which can be extremely difficult to do.</p>

<p>First, you can check <a href="http://justdelete.me/">JustDelete.Me</a> if the website is listed, and follow their instructions for removing your account. Otherwise, start by looking at your account settings or their help sections&mdash; they may have information on deleting your account, or if you&rsquo;re lucky, a button to do so. Then, if you&rsquo;re out of luck, send an email to customer support asking them to delete your account (include any pertinent information, like your username.) If they tell you it is impossible, make sure you have removed your personal information and changed the password as previously instructed,  and hope that this will suffice.</p>

<h3>Change These Passwords</h3>

<p>For the remaining accounts, go through and change the passwords for them as necessary. Here is my order of priority of whether you should change your password or not:</p>

<ol>
<li>Exploit Affected Websites (such as by Heartbleed) Immediate change</li>
<li>Duplicate Passwords</li>
<li>Bad Passwords</li>
<li>Really Old Passwords (2+ Years)</li>
<li>Old Passwords (1+ Year)</li>
<li>Kinda Old Passwords (4+ Months)</li>
<li>Recent Passwords (&lt; 4 Months, lower priority)</li>
</ol>


<p>Anything at levels 4 or higher should really be changed now. Bad Passwords include most passwords that are dictionary words, and do not include very many numbers or symbols. (You can look up &ldquo;password entropy&rdquo; for thoughts on this and advice on creating new passwords.)</p>

<p>For the typical end user, I just recommend using a password manager to generate and keep track of new passwords. Otherwise, there have been very many articles on password generation, including <a href="http://xkcd.com/936/">this famous XKCD comic</a>. For my money, I believe that any wildly popular advice on passwords is likely to be insecure, so you should really make up your own rules involving numbers and symbols. For instance, maybe you made up a secret language in Grade 6 that you remember to this day&mdash; make use of that. Use camel case pig Latin. Intersperse symbols and numbers throughout all of these.</p>

<h3>Conclusions</h3>

<p>After you are done changing your passwords, make sure that you don&rsquo;t write them down or leave access to them where a person can find them, and if you need to share access to an account with someone, change the password first. Remember, the easiest way to gain access to somebody&rsquo;s account is through social engineering.</p>

<p>Finally, it is likely a good idea to also ensure that all your apps and programs are up-to-date, and to do an audit of what apps have access to your Facebook and Twitter accounts. A virus scan probably also won&rsquo;t hurt either. However, simply changing your passwords as listed above is a good first step for people who are confused and pressed on time.</p>
]]>
		</content>
	</entry>
	
	<entry>
		
			<title type="html"><![CDATA[Kanye West and my Feminism]]></title>
		
		<link href="http://blog.ritacheng.com/blog/2014/04/01/kanye-west/"/>
		<updated>2014-04-01T21:28:58-07:00</updated>
		<id>http://blog.ritacheng.com/blog/2014/04/01/kanye-west</id>
		<content type="html">
			<![CDATA[
				
					<p></p>
				
			]]>
			<![CDATA[<p> The other day I was asked about how I enjoy the music of Kanye West, despite being a staunch feminist. Although there is undeniable misogynistic content in his songs, I overlook it because I love his production and enjoy his other themes&mdash; his criticisms of cultural system and capitalism (although he is extremely materialistic, he can still criticize the power structures that keep certain people in power), his mix of self deprecation and hubris, and discussions of race, family, justice and power. This doesn&rsquo;t excuse him for his lyrical treatment of most women as sexual objects, but I acknowledge these problems in the context of how American society views hip hop.</p>

<p>I tolerate a lot more misogyny in hip hop than most feminists because white capitalism was what made it an inherent part of the genre. Historically, blackness has long been sold as transgressive to white kids&mdash; even when it was a white man performing it, as with Elvis and his heavy borrowing from black artists. Consequentially, more transgressive&mdash; which often manifests as misogyny&mdash; artists sell better, get more critically acclaimed and make their labels happier. I don&rsquo;t have to be happy with every woman being labelled a slut but I don&rsquo;t really blame black artists for having to play this terrible game of garnering audiences with it.</p>

<p>Furthermore, misogyny is baked into literally every genre but we focus on hip hop as a misogynistic genre because of anti-blackness (if this seems contentious, one can look into how often racist slurs are used in this criticism). I don&rsquo;t think many white artists have been as scrutinized as hip hop artists are, despite being similarly problematic&mdash; the Decemberists are forgiven for being &lsquo;in character&rsquo; when they sing about the rape and murder of women; John Lennon was abusive in life and in song (see &ldquo;run for your life&rdquo;). Indie music in general depict women as dead, infantalized, or depressed&mdash; overall, we are helpless creatures. Arguably, the former is worse than the latter, but I find the discrimination and aggressions that I encounter frequently less tolerable than the ones that are infrequent for me. This is likely a fault of mine. but I tolerate Kanye and hip hop because I encounter their style of misogyny less frequently in real life. I still draw my line at sexual and physical violence against women in lyrics, but honestly, I don&rsquo;t think this content is much more common in hip hop than other artists.</p>
]]>
		</content>
	</entry>
	
	<entry>
		
			<title type="html"><![CDATA[Pokedex Design]]></title>
		
		<link href="http://blog.ritacheng.com/blog/2014/02/24/pokedex-design/"/>
		<updated>2014-02-24T11:20:11-08:00</updated>
		<id>http://blog.ritacheng.com/blog/2014/02/24/pokedex-design</id>
		<content type="html">
			<![CDATA[
				
					<p></p>
				
			]]>
			<![CDATA[<p>I just started a new playthrough of Pokemon Leafgreen&mdash; the last Pokemon game I had played through was Ruby, so I thought I&rsquo;d ease back into playing these games with this one. It&rsquo;s both a continuation of the series and a game I&rsquo;m intimately familiar with&mdash; it is a remake of the first generation of Pokemon games.</p>

<p>One thing that struck me very quickly was how poorly designed the Pokedex was in terms of user experience. Unless you&rsquo;re part of Twitch playing Pokemon, there is hardly any reason to consult the Pokedex beyond looking at your catch and seen counts. The Pokedex has improved since the first generation&mdash; there is now at a glance type information, clear thumbnails of each Pokemon, and different categories, but it is still largely unhelpful for many potential use cases. I often find myself creating spreadsheets or looking for web applications to meet my needs.</p>

<p>Roughly, here is a persona for a potential Pokedex User:</p>

<blockquote><p>Red is a 10 year old boy from Pallet Town, who is on a quest to become a Pokemon Master. He would like to learn more about the Pokemon he has seen or caught, and could use some help on his journey to catch &lsquo;em all. He is quite adept at using technology, regularly using his computer to store and withdraw his Pokemon and items.</p></blockquote>

<p>The Pokedex is reasonably helpful for Red to discover facts about his Pokemon, but, particularly in Firered and Leafgreen, it falls short as a reference for catching Pokemon. Some features that would help include:</p>

<ul>
<li>Searching by name. This is a feature that was removed in FR/LG, for reasons unknown. Consequentially, the only way to find a Pokemon is to look through many pages, particularly if you do not know its local habitat.</li>
<li>Filtering by Caught / Uncaught status. If I&rsquo;d like to know more about the Pokemon I own, there would be a lot less friction if I didn&rsquo;t have to scroll through entries that are incomplete, and vice versa.</li>
<li>Viewing Pokemon by Location Found. Apparently a feature added in B2/W2 and then removed for no apparent reason, this would be a boon for completionists, allowing a trainer to view at a glance whether they&rsquo;ve caught all the Pokemon in an area.</li>
<li>Custom lists. In attempting to complete the Kanto Pokedex, I find myself making lists of Pokemon I intend to catch in the wild, Pokemon I need to remember to trade, and Pokemon I need to remember to train. It would be handy if this was a feature facilitated in the game rather than Google Documents I&rsquo;ve created.</li>
</ul>


<p>If I were a Pokedex designer, I would want to conduct user studies, (If Professor Oak wanted us to test the devices, why didn&rsquo;t he ask us for our thoughts on them?) write up task analyses, and create storyboards for an improved interface. On the other hand, if I were in the Pokemon universe, I&rsquo;d probably forget about all of that, and just try to catch them all myself.</p>
]]>
		</content>
	</entry>
	
	<entry>
		
			<title type="html"><![CDATA[Philip Seymour Hoffman]]></title>
		
		<link href="http://blog.ritacheng.com/blog/2014/02/02/philip-seymour-hoffman/"/>
		<updated>2014-02-02T18:58:05-08:00</updated>
		<id>http://blog.ritacheng.com/blog/2014/02/02/philip-seymour-hoffman</id>
		<content type="html">
			<![CDATA[
				
					<p></p>
				
			]]>
			<![CDATA[<p>I don&rsquo;t normally care about celebrity deaths; they&rsquo;re so remote from my lifestyle that it always registers as a tragedy, but easy to move past. Today, though, Philip Seymour Hoffman passed away, and the loss is felt viscerally in me. Hoffman was likely the greatest working actor around: not only immensely talented, but also a <em>worker</em>: he was never so discriminating that he would pass down lesser roles, and never phoned it in when he took them (as so many others would.) In each and every performance, he would give it his all: this morning, my brother told me that he first noticed him in Along Came Polly, of all places. (Hoffman took literally the shittiest roles, evidentially.)</p>

<p>If you would like to commemorate Hoffman by watching his films, I highly recommend his films with Paul Thomas Anderson: I chiefly recommend his turns in The Master and Boogie Nights, but his other roles are certainly worthwhile as well. Synecdoche, New York is highly recommended as well: Hoffman carries the film with his performance, rendering an emotive character that would be a mess in any other actor&rsquo;s hands. However, any of Phillip Seymour Hoffman&rsquo;s performances are worthwhile to seek out, even in Along Came Polly or the five minutes he is in Catching Fire. I cherish the films that we have, and lament the roles we will never see him in. I hope that he rests in peace.</p>
]]>
		</content>
	</entry>
	
	<entry>
		
			<title type="html"><![CDATA[Foursquare and Kinds of Fun]]></title>
		
		<link href="http://blog.ritacheng.com/blog/2014/02/01/foursquare-and-kinds-of-fun/"/>
		<updated>2014-02-01T18:03:27-08:00</updated>
		<id>http://blog.ritacheng.com/blog/2014/02/01/foursquare-and-kinds-of-fun</id>
		<content type="html">
			<![CDATA[
				
					<p></p>
				
			]]>
			<![CDATA[<p>I read a <a href="http://angrydm.com/2014/01/gaming-for-fun-part-1-eight-kinds-of-fun/">blog post</a> recently about LeBlanc&#8217; eight types of fun (as applied to being a good dungeon master for D&amp;D) and, since I don&rsquo;t DM or play D&amp;D, it got me thinking about web applications and gamification. Although Kevin Warbauch&rsquo;s Coursera class on gamification was very informative, I found that this blog post was more illuminating than the discussion on fun included in the course. It got me thinking about how Foursquare&rsquo;s gamification were so much more effective than other applications: it covers more types of fun than the usual gamified effort, and it&rsquo;s consequentially more fun.</p>

<p>This is partially a consequence of Foursquare&rsquo;s core concept as well as its game elements. For instance, it largely achieves the Sensory aspect of fun because of checking into the locations, rather than any artificial game elements. What could be more sensory than going to a restaurant and trying some new food? Similarly, it achieves Discovery as part of its original mission: Foursquare helps you find new places to go. Submission isn&rsquo;t as deliberately achieved, but its a side effect of Foursquare being so easy and uninvolved: all you have to do is check in, and then enjoy yourself at the locale.</p>

<p>Fellowship is likely the most important type of fun for Foursquare: the social network is designed to facilitate meeting up with your friends. Although its certainly possible to use Foursquare solitaire, much of the fun is seeing where your friends check in and getting implicit recommendations that way.</p>

<p>More explicit game elements of Foursquare are directed towards gamers who like Challenge. Collecting badges, climbing leaderboards, and creating streaks are all components borrowed from games and can be extremely habit forming. Foursquare, to an extent, also includes the Expression type of fun: the places where you check in, and particularly, where you become King, make a particular statement about yourself. If you&rsquo;re king of Sun Sui Wah and you&rsquo;ve collected all the Chinese food badges, it denotes to the world: &ldquo;I&rsquo;m an expert on Chinese food.&rdquo; It&rsquo;s a much stronger assertion than just claiming it.</p>

<p>The two remaining types of fun are a bit weaker on Foursquare. Becoming King may satisfy those who like Fantasy, but it&rsquo;s a weak argument. The sense of progression in steaks and points may satisfy Narrative seekers a little, but not to any great extent. Still, six out of eight is extremely good for any game, let alone a gamified platform. Developers would do well by following Foursquare&rsquo;s example on this in making their applications fun.</p>
]]>
		</content>
	</entry>
	
	<entry>
		
			<title type="html"><![CDATA[Bullet Points from Maximize Your Potential]]></title>
		
		<link href="http://blog.ritacheng.com/blog/2014/01/21/bullet-points-from-maximize-your-potential/"/>
		<updated>2014-01-21T13:55:13-08:00</updated>
		<id>http://blog.ritacheng.com/blog/2014/01/21/bullet-points-from-maximize-your-potential</id>
		<content type="html">
			<![CDATA[
				
					<p></p>
				
			]]>
			<![CDATA[<p>I have an embarrassing secret: I love self-help books, whether they&rsquo;re the usual cheesy &ldquo;believe in yourself&rdquo; drivel, or coated with a veneer of business or professional material. I don&rsquo;t think this obsession is all that different from &ldquo;life hacks&rdquo; or the motivational posts that litter Hacker News from time to time, except for two points: they might contain fresh insights that the life hackers haven&rsquo;t covered yet and they usually pad out these insights with walls of text. They need to fill in an entire book somehow.</p>

<p>I recently read 99U&rsquo;s &ldquo;Maximize Your Potential: Grow Your Expertise, Take Bold Risks &amp; Build an Incredible Career&rdquo;, and took down a few notes. To save you the trouble of reading the book, here are some of the big takeaways:</p>

<ul>
<li>Post long term goals by your workstation to keep them in mind.</li>
<li>Let go of email/social media to reduce your mental list of &ldquo;things to do&rdquo;.</li>
<li>Compulsive decisions != Conscious decisions</li>
<li>UNPLUG.</li>
<li>Breathe deeply while you work.</li>
<li>Drink lots of water.</li>
<li>Instinct > Technology</li>
<li>Set aside specific time each week/day to work on spare projects to nurture your imagination.</li>
<li>Always carry a spare notebook for questions / ideas.</li>
<li>Let your mind wander when stuck.</li>
<li>Do creative work at beginning of day, and save reactive work for afterwards.</li>
<li>Have a routine.</li>
<li>Establish associative triggers for work. (e.g. different hats for different activities)</li>
<li>Consistent intervals for work (e.g. Pomodoro. 90 min bursts then take a break.)</li>
<li>Don’t wait to be in &ldquo;the mood&rdquo; for work. Just do it!</li>
<li>Spend time by yourself in a day.</li>
<li>Block off periods of times with no distractions (These are meetings with yourself.) Start off w/ 1 h meetings, and add 15 mins every two weeks.</li>
<li>Remove even the option of being distracted.</li>
<li>Finish tasks so you stop thinking about them!</li>
<li>Save iterations and POST MILESTONES.</li>
<li>Alternate creative and mindful work.</li>
</ul>


<p>You might already do some of these things, and some of these suggestions may be overwhelming. Just take a step at a time! I&rsquo;m currently doing well with my &lsquo;drinking water&rsquo; New Years&#8217; resolution!</p>
]]>
		</content>
	</entry>
	
	<entry>
		
			<title type="html"><![CDATA[Fear of Missing Out]]></title>
		
		<link href="http://blog.ritacheng.com/blog/2014/01/18/fear-of-missing-out/"/>
		<updated>2014-01-18T05:29:36-08:00</updated>
		<id>http://blog.ritacheng.com/blog/2014/01/18/fear-of-missing-out</id>
		<content type="html">
			<![CDATA[
				
					<p></p>
				
			]]>
			<![CDATA[<p>After the ascendency of YOLO, selfie, and other neologisms, newspaper lifestyle sections are trumpeting the rise of FOMO, the fear of missing out. At once, these articles seek to assuage the reader&mdash; there is nothing to be afraid of&mdash; but, unconsciously, they sound the alarm: you likely hadn&rsquo;t heard of FOMO, and perhaps everyone worrying about it has just cause for concern. Most of the time, these articles have the same prescriptions for those with FOMO: recognize that the lifestyle you&rsquo;re missing is an illusion, block the distractions, and learn to let go. These sound good on paper, but I can&rsquo;t quite put these in practice for my pernicious case of FOMO.</p>

<p>To clarify, I don&rsquo;t have general FOMO: I&rsquo;m indifferent to the lifestyles usually envied by FOMO sufferers, as I am reasonably well travelled and dislike many parties. I do, however, suffer from a programming specific FOMO: following Hacker News has left me with a great deal of regret over all the programming languages I don&rsquo;t know, all the frameworks I haven&rsquo;t worked with, and all of the entrepreneurial skills I have yet to put into action. My bookmarks list is crowded with tutorials that I haven&rsquo;t done; my desk covered with books I have yet to read. It&rsquo;s harder to let go with this sort of apprehension because all of it can still be done. You don&rsquo;t have to miss out.</p>

<p>Perhaps becoming an extremely well-versed programmer is an illusion. I doubt many people are truly proficient in all of the latest trending programming languages (I doubt many know all of the trending javascript frameworks all that well!) I don&rsquo;t quite take this to heart though&mdash; I still believe that there must be some fraction of a percentage of programmers that does know them reasonably well, and I aspire to be one of them. So if I won&rsquo;t recognize this illusion, and since I patently refuse to stop following Hacker News (likely to my great personal detriment) I need to start learning to let go.</p>

<p>I&rsquo;m starting simply this year. Instead of trying to learn all of these languages and frameworks on a surface level, I&rsquo;ll be focusing on relearning Javascript, without the overhead of frameworks. I&rsquo;ve never done this before: in the past, all of the Javascript I knew was learned on an ad-hoc basis. From here, I may try to learn a framework or two, but I know that if I don&rsquo;t, I&rsquo;m not really missing out.</p>
]]>
		</content>
	</entry>
	
	<entry>
		
			<title type="html"><![CDATA[Why do Awards Matter?]]></title>
		
		<link href="http://blog.ritacheng.com/blog/2014/01/11/why-do-awards-matter/"/>
		<updated>2014-01-11T17:39:46-08:00</updated>
		<id>http://blog.ritacheng.com/blog/2014/01/11/why-do-awards-matter</id>
		<content type="html">
			<![CDATA[
				
					<p></p>
				
			]]>
			<![CDATA[<p>With the Golden Globes airing tomorrow, Awards Season is almost officially upon us. (The People&rsquo;s Choice Awards, airing last week, is more akin to hors d&#8217;oeuvre, or an aperitif.) Many fans of television, music, and film pretend not to care, but get outraged afterwards when their favourites don&rsquo;t win&mdash; or if something they abhor does. It&rsquo;s an annual tradition, for every award in every field: film buffs, obviously, get annoyed when Crash wins over Brokeback Mountain; sports fanatics are angry when their favourites are snubbed for the Halls of Fame; even literary snobs get annually annoyed when their favourite novels are passed over for the Booker. But why does&mdash; or why should&mdash; anybody care?</p>

<p>Theoretically, most awards are important for pragmatic reasons: awards draw attention to recipients who might otherwise go unnoticed, providing healthy sales boosts and promotional materials. They are distinctions of importance and quality, in theory, and provide incentives to improve. They get people talking about the mediums and, often, consuming more of them&mdash; some of my local theatres trade entirely in Best Picture nominees as the Oscars approach. Often, awards can have a direct monetary prize as well, and this financial difference can make a major difference for a struggling artist.</p>

<p>However, when you look at the popular discourse of these award shows, hardly anybody have these factors in mind (I root for 12 Years a Slave because I think the stark subject matter may start an important conversation about race relations, but that&rsquo;s unlikely to happen.) Phillip Roth gets mentioned annually for the Nobel Prize in Literature (not to mention more outlandish claims such as Richard Dawkins suggesting Steven Pinker for the prize), but nobody can claim that he really needs the sales boost or the monetary prize at this point of his career. Perhaps the honor would&rsquo;ve made a difference when he was young and controversial, but his novels&#8217; sexual content and religious misgivings have become part of the literary canon by this point. Popular and successful nominees get suggested for other awards as well&mdash; the final installment of the Lord of the Rings trilogy probably didn&rsquo;t benefit very much from its sweep at the Oscars. If the monetary gain doesn&rsquo;t matter, awards are hardly an indicator of quality or importance as well; many critics lambast the various award winners annually, and the winners hardly cause any trends or improvement. Despite a female director&rsquo;s win for The Hurt Locker in 2009, the gender balance for directing in Hollywood is largely the same.</p>

<p>So why do we care about awards? Surely not just the uneven comedy or the fashion choices of award shows&mdash; if this was the case, we would all stop watching within the first 30 minutes of them. Public awards are largely a case of egotism&mdash;that is, self pride and not egoism, which is self-interest&mdash; both on the parts of the celebrities and artists involved as well as that of the viewing public. The egotism of the artists is clear: nothing feels better than to be recognized and to win. The egotism of the audience is more subtle: when you love a TV show or album, you feel a sense of validation when people agree with your taste. With awards, this effect is heightened: you feel a sense of expertise when your favourites are anointed, or your taste seems confirmed when you seek out award winners afterwards.</p>

<p>This audience egotism seems wholly misplaced. If you appreciate something, recommend it to your friends and peers&mdash; but don&rsquo;t take it personally when the Academy doesn&rsquo;t agree with you.</p>
]]>
		</content>
	</entry>
	
	<entry>
		
			<title type="html"><![CDATA[App Ideas]]></title>
		
		<link href="http://blog.ritacheng.com/blog/2014/01/06/app-ideas/"/>
		<updated>2014-01-06T16:26:31-08:00</updated>
		<id>http://blog.ritacheng.com/blog/2014/01/06/app-ideas</id>
		<content type="html">
			<![CDATA[
				
					<p></p>
				
			]]>
			<![CDATA[<p>I&rsquo;m kind of a dreamer sometimes. As many people do, I come up with ideas for programs and applications that I think would be useful and wish existed&mdash; sometimes I go farther and plan them. I have the technical background to really know which ideas are viable or not. Unfortunately, there&rsquo;s only so many hours in a day. I don&rsquo;t have time to create every project that I dream up, and I usually just record them in a &ldquo;projects&rdquo; list, and forget them entirely until reviewing them later: &ldquo;I wish that existed.&rdquo; I used to joke that I&rsquo;d be afraid of someone &ldquo;Social Networking&rdquo; me (as in the Sorkin movie, not sharing on Twitter) but that&rsquo;s at all realistic or reasonable. I usually just wish these projects existed. Most of these ideas aren&rsquo;t profitable anyways!</p>

<p>Instead of leaving these projects in a list to collect dust, I&rsquo;ve decided to start publishing some of them in a series of blog posts. Perhaps, in a very unlikely case, someone will make one of these apps. Perhaps they already exist, and I can be alerted to them. Perhaps they&rsquo;ll just collect dust publicly now. Either way, I think it&rsquo;d be good for my projects list to be cleared out.</p>

<p>Here are some small projects that might be good for a student or a weekend:</p>

<h3>Group Splitter</h3>

<p>This would be a tool for teachers, TAs, or other facilitators to help them split up classes or groups into equitable smaller groups. When left to their own devices, people will likely just stick to groups of their pre-existing friends, making unfair groups (that is, higher performing students tend to stick together; as do lower performing) and potentially creating outcasts and social anxious situations. However, randomly forming groups can be a bad idea as well: groups can still be tremendously unbalanced, and gender issues may come up (if boys heavily outweigh girls in a group, the girls are far less likely to speak up or take leadership roles.) Theoretically, there should be algorithmic ways to determine fairer groups, and this tool would be an attempt at that.</p>

<p>One would input a spreadsheet containing names, grades, gender or any other variable you think would be important, potentially, as well as what sizes of groups you would prefer. Then the system will sort the people into groups that either maximize diversity or aim for balance (in the case of gender) for all variables. One could do this as many times as they need (for instance, for changing groups midway a semester.)</p>

<h2>Best X in the City</h2>

<p>After living in Taiwan for over a month, I became addicted to eating these soup dumplings called xiao long bao. When I got back, I was determined to continue my addiction, but found that most restaurants had terrible xiao long bao: the wrapper would be too thick, the meat too little, or the soup would explode all over.</p>

<p>Although Yelp, Urbanspoon, and Foursquare are great for answering the question, &ldquo;where should I eat X in this city?&rdquo; they fall short of naming champions and determining &ldquo;where is it better to have X?&rdquo; (X, in this case, standing in for, different cuisines, different dishes, or even different stores.) At best, you may have a reviewer praising a restaurant and crowning it in their review, but that may be an empty gesture: who knows whether they&rsquo;ve tried any other restaurants of this type!</p>

<p>One could make an app designed to determine the answer to these questions. For each category, a person could add restaurants, select the ones they&rsquo;ve tried, and then rank them in a ballot. The app can then weigh each ballot (if you haven&rsquo;t tried as much, do you really know?) and determine, once and for all, what is the best X in the city.</p>

<h2>Ex Avoiding</h2>

<p>This one is a little creepier, but it assumes that the person in question has already given you permission to view this information and that you&rsquo;d want to avoid this person rather than stalk them&mdash; if you&rsquo;re stalking them, I hope they&rsquo;d remove that permission anyways!</p>

<p>After a bad breakup, one might not want to see their ex for at least a little while. Painful feelings come up, or conflict may arise. It might be best to try and avoid them altogether. For this app, you would use the Facebook and Foursquare APIs and compile where they may be now (&ldquo;They checked in at the corner coffee shop! Best to avoid it.&rdquo;) or events they&rsquo;ve marked as attending. (&ldquo;I don&rsquo;t want to go to Mark&rsquo;s party if he&rsquo;ll be there.&rdquo;) It&rsquo;s not necessarily the adult thing to do, but sometimes, being an adult hurts and doesn&rsquo;t need to happen immediately. Once you&rsquo;ve healed, you may not need the app anymore.</p>
]]>
		</content>
	</entry>
	
	<entry>
		
			<title type="html"><![CDATA[Resolutions]]></title>
		
		<link href="http://blog.ritacheng.com/blog/2014/01/02/resolutions/"/>
		<updated>2014-01-02T18:17:50-08:00</updated>
		<id>http://blog.ritacheng.com/blog/2014/01/02/resolutions</id>
		<content type="html">
			<![CDATA[
				
					<p></p>
				
			]]>
			<![CDATA[<p>It&rsquo;s that time of year when everybody is making resolutions to improve themselves: the start of a new year, the thinking goes, is auspicious for new beginnings, and plus, everybody else is doing it. I&rsquo;ve been asked a dozen times whether I had any New Year&rsquo;s resolutions, and I usually answer with a poor joke: I resolve not to make New Year&rsquo;s Resolutions. In all honesty, I&rsquo;ll probably just continue with these resolutions I made at arbitrary times of last year:</p>

<ol>
<li>Drink more water. I think a lot of people know I&rsquo;m in a state of constant dehydration; my chapped lips don&rsquo;t appreciate the snide comments, Certain Former Coworker Who Should Really Mind His Own Business. The thinking is that being properly hydrated will have a cascade of positive health benefits: I&rsquo;ll feel better, have better skin, and have more energy. I&rsquo;m not sure if it&rsquo;s true, and I know I&rsquo;ll miss the one positive benefit of not being hydrated: I never need bathroom breaks and am a champ at watching movie marathons in a single sitting.</li>
<li>I will not go see live shows of bands with four or more members who are <em>only</em> white dudes. Over the past year, I&rsquo;ve been increasingly concerned with ideas of diversity and representation. I may not have very many options in TV and movies, (there are only so many quality shows out there),but I can at least try to encourage more diversity in my listening habits (since black people are at the root of most of the genres we listen to, this shouldn&rsquo;t be as hard.) Moreover, you would think after your third member, you could at least find one person who isn&rsquo;t male or exclusively white. It shouldn&rsquo;t be a difficult proposition.</li>
<li>Exercise more regularly. Journal more regularly. Meditate more regularly. These are pretty usual resolutions that I began using Beeminder for last year.</li>
</ol>


<p>With that said, I do have one new resolution for the new year:</p>

<ol>
<li>Stop lying to Beeminder about all of the water drinking/working out/meditating I haven&rsquo;t been doing.</li>
</ol>


<p>We&rsquo;ll see how these resolutions work out. Since I started them at an arbitrary time, I can always start them later if I fail. With the advent of the year of the Horse (my astrological sign), if I believed in astrology, the whole year is an auspicious time to start a new resolution.</p>
]]>
		</content>
	</entry>
	
	<entry>
		
			<title type="html"><![CDATA[A New Start]]></title>
		
		<link href="http://blog.ritacheng.com/blog/2013/12/19/a-new-start/"/>
		<updated>2013-12-19T17:00:13-08:00</updated>
		<id>http://blog.ritacheng.com/blog/2013/12/19/a-new-start</id>
		<content type="html">
			<![CDATA[
				
					<p></p>
				
			]]>
			<![CDATA[<p>As part of a discussion on the future of journalism, Jason Kottke, prominent blogger, recently blogged about <a href="http://www.niemanlab.org/2013/12/the-blog-is-dead/">the end of the blog</a>. The supposition is that social media forms are taking over the function of the blog, and that the stream&mdash; reverse chronological ordering at the heart of blogs&mdash; is falling out of prominence compared to algorithmically-determined importance. If this is true, it&rsquo;s a bit of an odd time for me to try and revive my blog (after numerous format changes, this attempt is using Octopress.) However, I think the article&rsquo;s premises are a bit dubious, and now is as good a time as ever (for me) to be blogging.</p>

<p>The article posits that the stream is on the wane, but I disagree: the sites he cites are generally either two-way communication tools (which were never too blog-like, like Snapchat or Facebook) or still presented in chronological order (Pinterest and the other grids, Twitter, and Buzzfeed.) In any case, chronology still plays an important part of the importance algorithms mentioned (Reddit, Facebook). What marks a new trend in blog-like media is not the death of the stream, but the rise of personal curation: increasingly the blogs and news we follow are personally curated by our friends (linked on Facebook; reblogged on Tumblr; retweeted or posted on Twitter) or by authorities (Medium, Longreads). Buzzfeed editors personally sort through and regurgitate content found elsewhere. And this content often comes from blogs. The blog isn&rsquo;t dying, but the blogroll and other traditional means of promoting blogs are.</p>

<p>If blogs are dying, then why are there so many simple blog startups? Medium comes from one of the social networks supposedly disrupting blogs, and Ghost raised over $200,000 towards their definitely-a-blog platform. As long as you have thoughts and would like them to be published online, as I do, now is a good a time as ever to start blogging.</p>
]]>
		</content>
	</entry>
	
</feed>
